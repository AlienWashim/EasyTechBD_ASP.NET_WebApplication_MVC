@model DynamicProductUpdate.Product

@{
    ViewBag.Title = "Create";
}

<h2 class="card card-body shadow-sm">Add new product</h2>

@using (Html.BeginForm("Create", "Products", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal w-100">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="row w-100 vw-100">
            <!-- Left Column - Product Info (4 columns) -->
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(model => model.productName, "Product Name", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.productName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.productName, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.categoryId, "Category", htmlAttributes: new { @class = "control-label" })
                    @Html.DropDownList("categoryId", null, htmlAttributes: new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.categoryId, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.productPrice, "Price (BDT)", htmlAttributes: new { @class = "control-label" })
                    @Html.EditorFor(model => model.productPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.productPrice, "", new { @class = "text-danger" })
                </div>

                <div class="form-group">
                    @Html.Label("Product Image", "Image", htmlAttributes: new { @class = "control-label" })
                    <input type="file" name="productImage" class="form-control" />
                    @Html.ValidationMessage("productImage", "", new { @class = "text-danger" })
                </div>
            </div>

            <!-- Right Column - Product Description (8 columns) -->
            <div class="col-md-8">
                <div class="form-group">
                    @Html.LabelFor(model => model.productDescription, "Description", htmlAttributes: new { @class = "control-label" })
                    @Html.TextAreaFor(model => model.productDescription, new { @class = "form-control w-100", rows = 15, cols=50 })
                    @Html.ValidationMessageFor(model => model.productDescription, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Add" class="btn btn-primary m-1" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-secondary" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
